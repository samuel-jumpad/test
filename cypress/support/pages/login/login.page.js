// ===== P√ÅGINA DE LOGIN =====

export class LoginPage {
  
  // M√©todo est√°tico para visitar a p√°gina de login
  static visit() {
    cy.log('üåê Visitando p√°gina de login...');
    cy.visit('/', { timeout: 30000 });
    cy.get('body').should('not.contain', 'loading');
    cy.wait(2000);
    return LoginPage;
  }

  // M√©todo est√°tico para fazer login com credenciais v√°lidas
  static performValidLogin() {
    cy.log('üîê Fazendo login com credenciais v√°lidas...');
    
    // Preencher credenciais de login
    cy.get('input[name="email"]')
      .should('be.visible')
      .type('teste@email.com');
    
    cy.get('input[name="password"]')
      .should('be.visible')
      .type('Jumpad@2025');
    
    // Clicar no bot√£o de login
    cy.get('button[type="submit"]')
      .should('be.visible')
      .click();
    
    return LoginPage;
  }

  // M√©todo est√°tico para fazer login com email incorreto
  static performWrongEmailLogin() {
    cy.log('üîê Fazendo login com email incorreto...');
    
    cy.get('input[name="email"]')
      .should('be.visible')
      .type('emailerrado@teste.com');
    
    cy.get('input[name="password"]')
      .should('be.visible')
      .type('Jumpad@2025');
    
    cy.get('button[type="submit"]')
      .should('be.visible')
      .click();
    
    return LoginPage;
  }

  // M√©todo est√°tico para fazer login com senha incorreta
  static performWrongPasswordLogin() {
    cy.log('üîê Fazendo login com senha incorreta...');
    
    cy.get('input[name="email"]')
      .should('be.visible')
      .type('teste@email.com');
    
    cy.get('input[name="password"]')
      .should('be.visible')
      .type('senhaerrada123');
    
    cy.get('button[type="submit"]')
      .should('be.visible')
      .click();
    
    return LoginPage;
  }

  // M√©todo est√°tico para fazer login com credenciais incorretas
  static performWrongCredentialsLogin() {
    cy.log('üîê Fazendo login com credenciais incorretas...');
    
    cy.get('input[name="email"]')
      .should('be.visible')
      .type('emailerrado@teste.com');
    
    cy.get('input[name="password"]')
      .should('be.visible')
      .type('senhaerrada123');
    
    cy.get('button[type="submit"]')
      .should('be.visible')
      .click();
    
    return LoginPage;
  }

  // M√©todo est√°tico para aguardar carregamento da p√°gina
  static waitForPageLoad() {
    cy.log('‚è≥ Aguardando carregamento da p√°gina...');
    
    // Aguardar login e redirecionamento
    cy.url({ timeout: 30000 }).should('include', '/dashboard');
    cy.get('body').should('not.contain', 'loading');
    cy.get('body').should('not.contain', 'Entrar no Workspace');
    
    cy.log('‚úÖ P√°gina carregada com sucesso');
    return LoginPage;
  }

  // M√©todo est√°tico para validar sucesso do login
  static validateLoginSuccess() {
    cy.log('‚úÖ Validando sucesso do login...');
    cy.url({ timeout: 30000 }).should('include', '/dashboard');
    cy.get('body').should('not.contain', 'loading');
    cy.get('body').should('not.contain', 'Entrar no Workspace');
    return LoginPage;
  }

  // M√©todo est√°tico para validar falha do login
  static validateLoginFailure() {
    cy.log('‚ùå Validando falha do login...');
    cy.url({ timeout: 15000 }).should('include', '/');
    cy.url({ timeout: 15000 }).should('not.include', '/dashboard');
    return LoginPage;
  }

  // M√©todo est√°tico para login com credenciais v√°lidas (m√©todo alternativo)
  static loginWithValidCredentials() {
    cy.log('üîê Fazendo login com credenciais v√°lidas...');
    
    cy.get('input[name="email"]')
      .should('be.visible')
      .type('teste@email.com');
    
    cy.get('input[name="password"]')
      .should('be.visible')
      .type('Jumpad@2025');
    
    cy.get('button[type="submit"]')
      .should('be.visible')
      .click();
    
    return LoginPage;
  }

  // M√©todo est√°tico para login com credenciais inv√°lidas
  static loginWithInvalidCredentials() {
    cy.log('üîê Fazendo login com credenciais inv√°lidas...');
    
    cy.get('input[name="email"]')
      .should('be.visible')
      .type('emailerrado@teste.com');
    
    cy.get('input[name="password"]')
      .should('be.visible')
      .type('senhaerrada123');
    
    cy.get('button[type="submit"]')
      .should('be.visible')
      .click();
    
    return LoginPage;
  }
  
  // Fazer login no site (m√©todo de inst√¢ncia mantido para compatibilidade)
  fazerLogin() {
    cy.log('üîê Fazendo login no site...');
    
    // Preencher credenciais de login
    cy.get('input[name="email"]')
      .should('be.visible')
      .type('teste@email.com');
    
    cy.get('input[name="password"]')
      .should('be.visible')
      .type('Jumpad@2025');
    
    // Clicar no bot√£o de login
    cy.get('button[type="submit"]')
      .should('be.visible')
      .click();
    
    // Aguardar login e redirecionamento
    cy.url({ timeout: 30000 }).should('include', '/dashboard');
    cy.get('body').should('not.contain', 'loading');
    cy.get('body').should('not.contain', 'Entrar no Workspace');
    
    cy.log('‚úÖ Login realizado com sucesso');
  }

  // Acessar a tela principal (dashboard) ap√≥s o login
  acessarTelaPrincipal() {
    cy.log('üè† Acessando tela principal (dashboard)...');
    
    // Navegar para o dashboard
    cy.visit('/dashboard', { timeout: 30000 });
    
    // Aguardar dashboard carregar completamente
    cy.get('body').should('not.contain', 'loading');
    cy.wait(3000);
    
    // Verificar se est√° na tela principal
    cy.url().should('include', '/dashboard');
    
    // Aguardar elementos do dashboard carregarem
    cy.get('body').should('not.contain', 'loading');
    cy.wait(2000);
    
    cy.log('‚úÖ Tela principal acessada com sucesso');
  }

  // Verificar se est√° na p√°gina principal (dashboard)
  verificarPaginaPrincipal() {
    cy.log('üîç Verificando se est√° na p√°gina principal...');
    
    // Verificar t√≠tulo de boas-vindas
    cy.xpath('//h4[contains(text(), "Boas vindas")]')
      .should('be.visible');
    
    // Verificar bot√£o "Criar novo agente"
    cy.xpath('//button[contains(text(), "Criar novo agente")]')
      .should('be.visible');
    
    cy.log('‚úÖ P√°gina principal verificada - pode prosseguir para o pr√≥ximo passo');
  }
}